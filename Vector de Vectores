#include "stdafx.h"
#include "conio.h"
#include <iostream>
#define MAX 100
using namespace std;

struct tipo_vector
{
  int V[];
};

void cargar(tipo_vector vec[], int n);
void mostrar(tipo_vector vec[], int n);
void espejo(tipo_vector vec[], int n);

void main()
{
  tipo_vector vec[MAX], int n;
  do
   {cout<<"Ingrese tamaÃ±o de vectores: ";
    cin>>n;
  }while(n>MAX) || (n<0);
  cargar(vec,n);
  mostrar(vec,n);
  cout<<endl<<"El espejo del vector de vectores es el siguiente:"<<endl;
  espejo(vec,n);
  mostrar(vec,n);
  getch();
}

void cargar(tipo_vector vec[], int n)
{int i, j;
 for(i=0; i<n; i++)
   {for(j=0; j<n; j++)
      {cout<<endl<<"Ingrese valor de elemento ["<<(i+1)<<"]["<<(j+1)<<"]: ";
       cin>> vec[i].V[j];
      }
   }
}

void mostrar(tipo_vector vec[], int n)
{int i, j;
 for(i=0; i<n; i++)
   {for(j=0; j<n; j++)
      cout<<endl<<"V["<<(i+1)<<"]["<<(j+1)<<"]: "<<vec[i].V[j];
   }
}

void espejo(tipo_vector vec[], int n)
{int i,j,aux; tipo_vector AUX[];
 for(i=0; i<(n/2); i++)
    {for(j=0; j<(n/2); j++)
        {aux = vec[i].V[j];
         vec[i].V[j] = vec[i].V[n-i-1];
         vec[i].V[n-i-1] = aux;
        }
     AUX[] = vec[i];
     vec[i] = vec[n-i-1];
     vec[n-i-1] = vec[i];
    }
}
